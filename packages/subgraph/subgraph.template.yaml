specVersion: 0.0.2
description: Liquid staking yield aggregator for web3 protocols
repository: https://github.com/Tenderize/tender-app/packages/subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Registry
    network: {{networkName}}
    source:
      startBlock: {{contracts.registry.startBlock}}
      address: {{contracts.registry.address}}
      abi: Registry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      abis:
        - name: Registry
          file: ../contracts/src/abis/Registry.json
      entities:
        - TenderizerConfig
      eventHandlers:
        - event: TenderizerCreated((string,address,address,address,address,address,address))
          handler: handleTenderizerCreated
      file: ./src/mappings/registry.ts
      language: wasm/assemblyscript
templates:
    - name: Tenderizer
      kind: ethereum/contract
      network: {{networkName}}
      source:
        abi: Tenderizer
      mapping:
        kind: ethereum/events
        apiVersion: 0.0.1
        language: wasm/assemblyscript
        file: ./src/mappings/tenderizer.ts
        entities:
          - Tenderizer
        abis:
          - name: Tenderizer
            file: ../contracts/src/abis/Tenderizer.json
        eventHandlers:
          - event: Deposit(indexed address,uint256)
            handler: handleDepositEvent
          - event: Withdraw(indexed address,uint256)
            handler: handleWithdrawEvent
          - event: RewardsClaimed(uint256,uint256)
            handler: handleRewardsClaimedEvent
          - event: ProtocolFeeCollected(uint256)
            handler: handleProtocolFeeCollectedEvent
          - event: LiquidityFeeCollected(uint256)
            handler: handleLiquidityFeeCollectedEvent
    - name: TenderFarm
      kind: ethereum/contract
      network: {{networkName}}
      source:
        abi: TenderFarm
      mapping:
        kind: ethereum/events
        apiVersion: 0.0.1
        language: wasm/assemblyscript
        file: ./src/mappings/tenderFarm.ts
        entities:
          - Tenderizer
        abis:
          - name: TenderFarm
            file: ../contracts/src/abis/TenderFarm.json
        eventHandlers:
          - event: Farm(indexed address,uint256)
            handler: handleFarmEvent
          - event: Unfarm(indexed address,uint256)
            handler: handleUnfarmEvent
          - event: Harvest(indexed address,uint256)
            handler: handleHarvestEvent
    - name: Pool
      kind: ethereum/contract
      network: {{networkName}}
      source:
        abi: Pool
      mapping:
        kind: ethereum/events
        apiVersion: 0.0.4
        language: wasm/assemblyscript
        file: ./src/mappings/bpool/pool.ts
        entities:
          - Pool
          - Balancer
          - Swap
        abis:
          - name: Pool
            file: ../contracts/src/abis/BPool.json
          - name: BToken
            file: ../contracts/src/abis/BToken.json
          - name: BTokenBytes
            file: ../contracts/src/abis/BTokenBytes32.json
          - name: ConfigurableRightsPool
            file: ../contracts/src/abis/ConfigurableRightsPool.json
        eventHandlers:
          - event: LOG_CALL(indexed bytes4,indexed address,bytes)
            topic0: "0x34e1990700000000000000000000000000000000000000000000000000000000"
            handler: handleSetSwapFee
          - event: LOG_CALL(indexed bytes4,indexed address,bytes)
            topic0: "0x92eefe9b00000000000000000000000000000000000000000000000000000000"
            handler: handleSetController
          - event: LOG_CALL(indexed bytes4,indexed address,bytes)
            topic0: "0x49b5955200000000000000000000000000000000000000000000000000000000"
            handler: handleSetPublicSwap
          - event: LOG_CALL(indexed bytes4,indexed address,bytes)
            topic0: "0x4bb278f300000000000000000000000000000000000000000000000000000000"
            handler: handleFinalize
          - event: LOG_CALL(indexed bytes4,indexed address,bytes)
            topic0: "0x3fdddaa200000000000000000000000000000000000000000000000000000000"
            handler: handleRebind
          - event: LOG_CALL(indexed bytes4,indexed address,bytes)
            topic0: "0xe4e1e53800000000000000000000000000000000000000000000000000000000"
            handler: handleRebind
          - event: LOG_CALL(indexed bytes4,indexed address,bytes)
            topic0: "0xcf5e7bd300000000000000000000000000000000000000000000000000000000"
            handler: handleUnbind
          - event: LOG_JOIN(indexed address,indexed address,uint256)
            handler: handleJoinPool
          - event: LOG_EXIT(indexed address,indexed address,uint256)
            handler: handleExitPool
          - event: LOG_SWAP(indexed address,indexed address,indexed address,uint256,uint256)
            handler: handleSwap
          - event: Transfer(indexed address,indexed address,uint256)
            handler: handleTransfer
        callHandlers:
          - function: gulp(address)
            handler: handleGulp